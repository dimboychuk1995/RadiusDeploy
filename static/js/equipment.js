// üîÑ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≤–∫–ª–∞–¥–æ–∫ (Equipment List / Vendors / Purchase Orders)
function initEquipment() {
  const navLinks = document.querySelectorAll('#equipment-subnav .nav-link');
  const sections = document.querySelectorAll('.equipment-subsection');

  // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≤–∏–¥–∏–º–æ—Å—Ç–∏ —Å–µ–∫—Ü–∏–π –ø–æ –≤–∫–ª–∞–¥–∫–µ
  navLinks.forEach(link => {
    link.addEventListener('click', () => {
      navLinks.forEach(l => l.classList.remove('active'));
      link.classList.add('active');

      const target = link.dataset.target;
      sections.forEach(sec => {
        sec.style.display = sec.id === target ? 'block' : 'none';
      });
    });
  });

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Ñ–æ—Ä–º—É –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤–µ–Ω–¥–æ—Ä–∞
  handleVendorFormSubmit();
  handleProductFormSubmit();
}

// üì§ –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ä–º—ã –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤–µ–Ω–¥–æ—Ä–∞
function handleVendorFormSubmit() {
  const form = document.getElementById('addVendorForm');

  form.addEventListener('submit', async (e) => {
    e.preventDefault();

    // –°–æ–±–∏—Ä–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ñ–æ—Ä–º—ã
    const formData = {
      name: form.name.value.trim(),
      phone: form.phone.value.trim(),
      email: form.email.value.trim(),
      contact_person: form.contact_person.value.trim(),
      address: form.address.value.trim()
    };

    try {
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º POST-–∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–µ—Ä–≤–µ—Ä
      const res = await fetch('/api/vendors/create', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(formData)
      });

      const json = await res.json();

      if (json.success) {
        // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª–∫—É, –æ—á–∏—â–∞–µ–º —Ñ–æ—Ä–º—É
        const modal = bootstrap.Modal.getInstance(document.getElementById('addVendorModal'));
        modal.hide();
        form.reset();

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        Swal.fire({
          icon: 'success',
          title: '–£—Å–ø–µ—à–Ω–æ',
          text: '–í–µ–Ω–¥–æ—Ä –¥–æ–±–∞–≤–ª–µ–Ω',
          timer: 1500,
          showConfirmButton: false
        });

        // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫
        loadVendors();
      } else {
        Swal.fire({
          icon: 'error',
          title: '–û—à–∏–±–∫–∞',
          text: json.error || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'
        });
      }
    } catch (err) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ:', err);
      Swal.fire({
        icon: 'error',
        title: '–û—à–∏–±–∫–∞',
        text: '–°–µ—Ä–≤–µ—Ä –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç'
      });
    }
  });
}

// üì• –ó–∞–≥—Ä—É–∑–∫–∞ —Å–ø–∏—Å–∫–∞ –≤–µ–Ω–¥–æ—Ä–æ–≤ —Å —Å–µ—Ä–≤–µ—Ä–∞
async function loadVendors() {
  const container = document.getElementById('vendorListContainer');
  container.innerHTML = '<p class="text-muted">–ó–∞–≥—Ä—É–∑–∫–∞...</p>';

  try {
    const res = await fetch('/api/vendors/list');
    const json = await res.json();

    if (!json.success) {
      container.innerHTML = '<p class="text-danger">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏</p>';
      return;
    }

    if (json.vendors.length === 0) {
      container.innerHTML = '<p class="text-muted">–í–µ–Ω–¥–æ—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</p>';
      return;
    }

    // –°–æ–∑–¥–∞—ë–º —Ç–∞–±–ª–∏—Ü—É —Å –¥–∞–Ω–Ω—ã–º–∏
    const list = document.createElement('div');
    list.className = 'list-group';

    json.vendors.forEach(v => {
      const item = document.createElement('div');
      item.className = 'list-group-item';

        item.innerHTML = `
          <div class="d-flex justify-content-between align-items-center w-100">
            <div class="flex-grow-1 pe-3">
              <div class="fw-bold">${v.name}</div>
              <div class="text-muted">
                <i class="fas fa-phone text-danger me-1"></i> ${v.phone || '‚Äî'}
                &nbsp;|&nbsp;
                <i class="fas fa-envelope text-muted me-1"></i> ${v.email || '‚Äî'}
              </div>
            </div>
            <div class="d-flex align-items-center">
              <button class="btn btn-sm btn-outline-primary me-1 btn-vendor-details" data-id="${v.id}" title="–î–µ—Ç–∞–ª–∏">
                <i class="fas fa-eye"></i>
              </button>
              <button class="btn btn-sm btn-outline-danger btn-vendor-delete" data-id="${v.id}" title="–£–¥–∞–ª–∏—Ç—å">
                <i class="fas fa-trash"></i>
              </button>
            </div>
          </div>
        `;
      list.appendChild(item);
    });


    container.innerHTML = '';
    container.appendChild(list);

    // üóë –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ —É–¥–∞–ª–µ–Ω–∏—è
    document.querySelectorAll('.btn-vendor-delete').forEach(btn => {
      btn.addEventListener('click', () => {
        const id = btn.dataset.id;
        Swal.fire({
          title: '–£–¥–∞–ª–∏—Ç—å –≤–µ–Ω–¥–æ—Ä–∞?',
          text: '–≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–æ–±—Ä–∞—Ç–∏–º–æ.',
          icon: 'warning',
          showCancelButton: true,
          confirmButtonText: '–£–¥–∞–ª–∏—Ç—å',
          cancelButtonText: '–û—Ç–º–µ–Ω–∞'
        }).then((result) => {
          if (result.isConfirmed) {
            deleteVendor(id);
          }
        });
      });
    });

    // üîç –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ –¥–µ—Ç–∞–ª–µ–π
    document.querySelectorAll('.btn-vendor-details').forEach(btn => {
      btn.addEventListener('click', () => {
        const id = btn.dataset.id;
        fetch(`/fragment/vendor/${id}`)
          .then(res => res.text())
          .then(html => {
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ—Ä–∞–≥–º–µ–Ω—Ç
            const detailsBlock = document.getElementById('vendor-details');
            detailsBlock.innerHTML = html;
            detailsBlock.style.display = 'block';

            // –°–∫—Ä—ã–≤–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤–µ–Ω–¥–æ—Ä–æ–≤
            document.getElementById('vendors').style.display = 'none';
          });
      });
    });

  } catch (err) {
    console.error(err);
    container.innerHTML = '<p class="text-danger">–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞</p>';
  }
}

// ‚ùå –£–¥–∞–ª–µ–Ω–∏–µ –≤–µ–Ω–¥–æ—Ä–∞ –ø–æ ID
async function deleteVendor(id) {
  try {
    const res = await fetch(`/api/vendors/${id}`, { method: 'DELETE' });
    const json = await res.json();

    if (json.success) {
      Swal.fire({
        icon: 'success',
        title: '–£–¥–∞–ª–µ–Ω–æ',
        text: '–í–µ–Ω–¥–æ—Ä —É–¥–∞–ª—ë–Ω',
        timer: 1500,
        showConfirmButton: false
      });
      loadVendors();
    } else {
      Swal.fire({
        icon: 'error',
        title: '–û—à–∏–±–∫–∞',
        text: json.error || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'
      });
    }
  } catch (err) {
    console.error(err);
    Swal.fire({
      icon: 'error',
      title: '–û—à–∏–±–∫–∞',
      text: '–°–µ—Ä–≤–µ—Ä –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç'
    });
  }
}

function returnToVendorList() {
  document.getElementById('vendor-details').style.display = 'none';
  document.getElementById('vendors').style.display = 'block';
}


function initAddProductModal() {
  const modal = document.getElementById('addProductModal');
  if (!modal) return;

  modal.addEventListener('shown.bs.modal', () => {
    const $cat = $('#productCategory');
    const $vendor = $('#productVendor');

    if ($cat.hasClass('select2-hidden-accessible')) $cat.select2('destroy');
    if ($vendor.hasClass('select2-hidden-accessible')) $vendor.select2('destroy');

    $cat.select2({
      theme: 'bootstrap-5',
      width: '100%',
      placeholder: '–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é',
      allowClear: true,
      minimumResultsForSearch: Infinity
    });

    $vendor.select2({
      theme: 'bootstrap-5',
      width: '100%',
      placeholder: '–í—ã–±–µ—Ä–∏—Ç–µ –≤–µ–Ω–¥–æ—Ä–∞',
      allowClear: true,
      minimumResultsForSearch: Infinity
    });
  });
}

function handleProductFormSubmit() {
  const form = document.getElementById('addProductForm');

  form.addEventListener('submit', async (e) => {
    e.preventDefault();

    const formData = new FormData(form);

    try {
      const res = await fetch('/api/equipment/create', {
        method: 'POST',
        body: formData
      });

      const json = await res.json();

      if (json.success) {
        const modal = bootstrap.Modal.getInstance(document.getElementById('addProductModal'));
        modal.hide();
        form.reset();

        Swal.fire({
          icon: 'success',
          title: '–£—Å–ø–µ—à–Ω–æ',
          text: '–ü—Ä–æ–¥—É–∫—Ç –¥–æ–±–∞–≤–ª–µ–Ω',
          timer: 1500,
          showConfirmButton: false
        });

        // TODO: –æ–±–Ω–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –µ—Å–ª–∏ –æ–Ω –æ—Ç—Ä–∏—Å–æ–≤–∞–Ω
      } else {
        Swal.fire({
          icon: 'error',
          title: '–û—à–∏–±–∫–∞',
          text: json.error || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'
        });
      }
    } catch (err) {
      console.error(err);
      Swal.fire({
        icon: 'error',
        title: '–û—à–∏–±–∫–∞',
        text: '–°–µ—Ä–≤–µ—Ä –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç'
      });
    }
  });
}

