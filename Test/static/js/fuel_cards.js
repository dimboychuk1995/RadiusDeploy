//fuel_cards.js


// üîπ –û—Å–Ω–æ–≤–Ω–∞—è —Ç–æ—á–∫–∞ –≤—Ö–æ–¥–∞ ‚Äî –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ—Ä–∞–≥–º–µ–Ω—Ç–∞
function initFuelCards() {
    setupOpenModalButton();        // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –∫–Ω–æ–ø–∫—É "–°–æ–∑–¥–∞—Ç—å"
    setupFuelCardFormSubmit();     // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –æ—Ç–ø—Ä–∞–≤–∫—É —Ñ–æ—Ä–º—ã
    loadFuelCards(); // üîπ –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
    setupTransactionUpload();
    setupFuelCardTransactionsButton();
    setupUploadTransactionsModalButton();
}

// üîπ –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –ø–æ–≤–µ–¥–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ "–°–æ–∑–¥–∞—Ç—å"
function setupOpenModalButton() {
    document.getElementById('btn-open-fuel-card-modal')?.addEventListener('click', () => {
        resetFuelCardForm();
        loadDriverOptions();
        $('#fuelCardModal').modal('show'); // ‚úÖ Bootstrap 4 —Å–ø–æ—Å–æ–±
    });
}
// üîπ –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –æ—Ç–ø—Ä–∞–≤–∫—É —Ñ–æ—Ä–º—ã –∫–∞—Ä—Ç—ã
function setupFuelCardFormSubmit() {
    document.getElementById('fuel-card-form')?.addEventListener('submit', function (e) {
        e.preventDefault();                           // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ—Ç –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫—É —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        const data = collectFuelCardFormData();       // –°–æ–±–∏—Ä–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã
        submitFuelCard(data);                         // –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä
    });
}

// üîπ –û—á–∏—â–∞–µ—Ç –ø–æ–ª—è —Ñ–æ—Ä–º—ã
function resetFuelCardForm() {
    document.getElementById('fuel-card-form').reset();
}

// üîπ –°–æ–±–∏—Ä–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏–∑ –ø–æ–ª–µ–π —Ñ–æ—Ä–º—ã –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–±—ä–µ–∫—Ç
function collectFuelCardFormData() {
    return {
        provider: document.getElementById('provider').value,
        card_number: document.getElementById('card_number').value,
        driver_id: document.getElementById('driver_id').value,
        vehicle_id: document.getElementById('vehicle_id').value,
        assigned_driver: document.getElementById('assigned_driver').value
    };
}

// üîπ –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –∫–∞—Ä—Ç—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä
function submitFuelCard(data) {
    fetch('/fuel_cards/create', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify(data)
    })
    .then(res => res.json())
    .then(result => {
        if (result.success) {
            console.log('–ö–∞—Ä—Ç–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞');
            $('#fuelCardModal').modal('hide'); // ‚úÖ Bootstrap 4 —Å–ø–æ—Å–æ–±
        } else {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–∞—Ä—Ç—ã:', result.error);
        }
    })
    .catch(err => {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞:', err);
    });
}


// üîπ –ó–∞–≥—Ä—É–∂–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤–æ–¥–∏—Ç–µ–ª–µ–π —Å backend'–∞
function loadDriverOptions() {
    fetch('/fuel_cards/drivers')
        .then(res => res.json())
        .then(drivers => {
            populateDriverSelect(drivers); // –ó–∞–ø–æ–ª–Ω—è–µ—Ç —Å–µ–ª–µ–∫—Ç –≤–æ–¥–∏—Ç–µ–ª—è–º–∏
        })
        .catch(err => {
            console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –≤–æ–¥–∏—Ç–µ–ª–µ–π:", err);
        });
}

// üîπ –î–æ–±–∞–≤–ª—è–µ—Ç –æ–ø—Ü–∏–∏ –≤ —Å–µ–ª–µ–∫—Ç Assigned Driver
function populateDriverSelect(drivers) {
    const select = document.getElementById('assigned_driver');
    select.innerHTML = ''; // –æ—á–∏—â–∞–µ–º —Ç–µ–∫—É—â–∏–µ –æ–ø—Ü–∏–∏

    drivers.forEach(driver => {
        const option = document.createElement('option');
        option.value = driver._id;
        option.textContent = driver.name;
        select.appendChild(option);
    });
}

function loadFuelCards() {
    fetch('/fuel_cards/list')
        .then(res => res.json())
        .then(cards => {
            populateFuelCardTable(cards);
        })
        .catch(err => {
            console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∫–∞—Ä—Ç:", err);
        });
}

function populateFuelCardTable(cards) {
    const tbody = document.querySelector('#fuel-cards-table tbody');
    tbody.innerHTML = ''; // –æ—á–∏—â–∞–µ–º

    cards.forEach(card => {
        const row = document.createElement('tr');
        row.innerHTML = `
            <td>${card.provider || ''}</td>
            <td>${card.card_number || ''}</td>
            <td>${card.driver_id || ''}</td>
            <td>${card.vehicle_id || ''}</td>
            <td>${card.assigned_driver_name || '-'}</td>
        `;
        tbody.appendChild(row);
    });
}

function setupTransactionUpload() {
    document.getElementById('upload-transactions-form')?.addEventListener('submit', function (e) {
        e.preventDefault();

        const formData = new FormData(this);

        fetch('/fuel_cards/upload_transactions', {
            method: 'POST',
            body: formData
        })
        .then(res => res.json())
        .then(result => {
            if (result.success) {
                alert('–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã');
                // TODO: –æ–±–Ω–æ–≤–∏—Ç—å —Ç–∞–±–ª–∏—Ü—É
            } else {
                alert('–û—à–∏–±–∫–∞: ' + result.error);
            }
        })
        .catch(err => {
            console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞:', err);
        });
    });
}

//–í—ã–∑—ã–≤–∞–µ—Ç –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
function setupUploadTransactionsModalButton() {
    document.getElementById('btn-upload-transactions')?.addEventListener('click', () => {
        $('#uploadTransactionsModal').modal('show'); // ‚úÖ –ü—Ä–æ—Å—Ç–æ –æ—Ç–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    });
}
